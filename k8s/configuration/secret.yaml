# All secret data should be base64 encoded before embedding them here by
# using `echo "secret string" | base64 -w 0 > secret.string.b64` and then
# copy the resulting value here.
# Ref: https://kubernetes.io/docs/concepts/configuration/secret/

apiVersion: v1
kind: Secret
metadata:
  name: mdb-agent-api-key
  namespace: default
type: Opaque
data:
  api-key: "<b64 encoded api key>"
---
apiVersion: v1
kind: Secret
metadata:
  name: bdb-private-key
  namespace: default
type: Opaque
data:
  private.key: "<b64 encoded private key>"
---
apiVersion: v1
kind: Secret
metadata:
  name: mdb-certs
  namespace: default
type: Opaque
data:
  mdb-instance.pem: "<b64 encoded, concatanated public and private keys>"
  ca.pem: "<b64 encoded CA public key>" 
  mdb-crl.pem: "<b64 encoded CRL data>" 
---
apiVersion: v1
kind: Secret
metadata:
  name: mdb-mon-certs
  namespace: default
type: Opaque
data:
  mdb-mon-instance.pem: "<b64 encoded, concatanated public and private keys>"
  ca.pem: "<b64 encoded CA public key>" 
---
apiVersion: v1
kind: Secret
metadata:
  name: mdb-bak-certs
  namespace: default
type: Opaque
data:
  mdb-bak-instance.pem: "<b64 encoded, concatanated public and private keys>"
  ca.pem: "<b64 encoded CA public key>" 
---
apiVersion: v1
kind: Secret
metadata:
  name: bdb-certs
  namespace: default
type: Opaque
data:
  bdb-instance.pem: "<b64 encoded, concatanated public and private keys>"
  ca.pem: "<b64 encoded CA public key>" 
---
apiVersion: v1
kind: Secret
metadata:
  name: https-certs
  namespace: default
type: Opaque
data:
  cert.pem: "<b64 encoded HTTPS key>"
  cert.key: "<b64 encoded HTTPS Signed Certificate or Certificate Chain>"
---
apiVersion: v1
kind: Secret
metadata:
  name: threescale-credentials
  namespace: default
type: Opaque
data:
  secret-token: "<b64 encoded 3scale secret-token>"
  service-id: "<b64 encoded 3scale service-id>"
  version-header: "<b64 encoded 3scale version-header>"
  provider-key: "<b64 encoded 3scale provider-key>"
  # The frontend-api-dns-name will be DNS name registered for your HTTPS
  # certificate.
  frontend-api-dns-name: "<b64 encoded DNS/FQDN>"
  # The upstream-api-port can be set to any port other than 9984, 9985, 443,
  # 8888 and 27017. We usually use port '9999', which is 'OTk5OQo=' in base 64.
  upstream-api-port: "OTk5OQo="
